Hola, tengo la siguiente aplicacion de turnos, estos serian los endpoints de la api que seria el backend:

Client:

- GET /api/client: Response:[
  {
    "id": 1,
    "name": "JESUS DAVID BENAVIDES CHICAIZA",
    "studentCode": "220034174",
    "email": "nassicand@udenar.edu.co"
  },
  {
    "id": 2,
    "name": "YORTH HARBIN ORTEGON SANCHEZ",
    "studentCode": "220034001",
    "email": "asdsa@gmail.com"
  }
]
- GET /api/client/{id}
- GET /api/Client/GetByStudentCode/{code}

Shift:

- GET /api/shift: Response [
  {
    "id": 1,
    "numShift": "UR1",
    "dateAttended": null,
    "isAttended": null,
    "isStandby": true,
    "idTypeShift": 1,
    "idClient": 1,
    "idUser": null,
    "atCreated": "2024-06-13T20:25:56.930556"
  }
]
- POST /api/shift: Response {
  "idTypeShift": 0,
  "studentCode": "string",
  "email": "user@example.com"
}
- GET /api/shift/{id}
- DELETE /api/shift/{id} (Este endpoint cambia de true a false un elemento del shift llamado is_active)
- POST /api/shift/NextShift: Body:{
  "idTypeShift": 1,
  "idUser": 1
} Response: {
  "id": 1,
  "numShift": "UR1",
  "dateAttended": "2024-06-15T18:48:08.3519247+00:00",
  "isAttended": null,
  "isStandby": false,
  "idTypeShift": 1,
  "idClient": 1,
  "idUser": 1,
  "atCreated": "2024-06-13T20:25:56.930556"
} (Este endpoint cambia el estado de isStandby a false)
- POST /api/Shift/TakeShift: Body: {
  "id": 1,
  "isAttended": true
} Response: {
  "id": 1,
  "numShift": "UR1",
  "dateAttended": "2024-06-15T18:48:08.351924",
  "isAttended": true,
  "isStandby": false,
  "idTypeShift": 1,
  "idClient": 1,
  "idUser": 1,
  "atCreated": "2024-06-13T20:25:56.930556"
} (Este endpoint cambia el isAttended a True y agrega la fecha de cuando fue atendido)

TypesShift:

- GET /api/TypesShift: Response [
  {
    "id": 1,
    "color": "FF0000",
    "icon": "UrIcon",
    "name": "Urgency",
    "description": "I need a urgent medical appintment",
    "code": "UR"
  }
]
- POST /api/TypesShift: Body: {
  "color": "string",
  "icon": "string",
  "name": "string",
  "description": "string",
  "code": "st"
}

- GET /api/TypesShift/{id}
- PUT /api/TypesShift/{id}
- DELETE /api/TypesShift/{id} (Este endpoint cambia el estado de isactive de true a false)

User:

- GET /api/User: Response: [
  {
    "id": 1,
    "username": "admin",
    "email": "user@example.com"
  }
]

- POST /api/User: Body: {
  "username": "string",
  "password": "string",
  "email": "user@example.com"
}

- GET /api/User/{id}
- PUT /api/User/{id}
- DELETE /api/User/{id} (Este endpoint cambia el estado de isactive de true a false)

Pregunta: En la parte del frontend estamos usando nextjs con typescript y tenemos primero que todo el home, el cual nos da 2 opciones, login para el user y la opcion de hacer un shift, la opcion de hacer un shift nos lleva a la ruta /shift, en esta ruta /shift se van a ver todos los tipos de turnos que existen y el cliente puede hacer un turno al darle click al tipo de turno que desea, se va a abrir un dialog y agregando su codigo y un correo electronico puede reservar un turno, despues de haber reservado se va a ir a la ruta /shift/{id_shift_creado} y podra ver su shift, eso es lo que hay por ahora, ayudame a hacer el login usando nextjs para que los usuarios puedan hacer el manejo de turnos de los cliente y que el sistema este completo usando los endpoints que te he proporcionado, no hagas una pagina de shift por que la seccion de hacer turno ya esta hecha, la seccion de mostrar el ticket ya esta hecha, y del home ya estan hechas, no hagas un login, implementa la funcionalidad para que los turnos tengan un flujo normal.

POR FAVOR ANALIZO TODO ESTE TEXTO PORQUE AQUI ESTAN TODOS LOS ENPOINTS NECESARIOS, USA ESTOS ENDPOINTS